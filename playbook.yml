---

- name: Install Packages ALL SERVERS
  hosts: all
  become: yes
  vars_files: /etc/ansible/vars.yml
  tasks:

    - name: Copiar chave pública SSH para o usuário vagrant
      ansible.builtin.copy:
        src: /root/.ssh/id_rsa.pub
        dest: /home/vagrant/.ssh/authorized_keys
        owner: vagrant
        group: vagrant
        mode: '0600'
    
    - name: Update apt cache
      apt:
        update_cache: yes
    
    - name: Install packages
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: latest

    - name: Ensure LANGUAGE is set
      lineinfile:
        path: /etc/environment
        line: "{{ variables }}"
        create: yes

    - name: Download Zabbix repository package
      get_url:
        url: https://repo.zabbix.com/zabbix/7.0/debian/pool/main/z/zabbix-release/zabbix-release_7.0-2+debian12_all.deb
        dest: /tmp/zabbix-release_7.0-2+debian12_all.deb

    - name: Install Zabbix repository package
      apt:
        deb: /tmp/zabbix-release_7.0-2+debian12_all.deb
        state: present

    - name: Install Zabbix Agent
      apt:
        name:  
          - zabbix-agent
        state: present
        update_cache: yes

    - name: Zabbix Agent | Change
      ansible.builtin.replace:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: 'Server=127.0.0.1', replace: 'Server=192.168.15.8' }
        - { regexp: 'ServerActive=127.0.0.1', replace: '' }
        - { regexp: 'Hostname=Zabbix server', replace: '' }

    - name: Enable/Start Zabbix Agent
      systemd:
        name: "{{ item }}"  
        enabled: yes
        state: started
      loop:
        - zabbix-agent 
 
- name: Install DB
  hosts: db
  become: yes
  tags: db
  vars_files: /etc/ansible/vars.yml
  tasks:

    - name: Add PostgreSQL APT key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Add PostgreSQL repository
      shell: |
        echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list

  
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install packages
      ansible.builtin.apt:
        name: 
          - postgresql-16
          - postgresql-contrib-16
        state: latest

    - name: DB | Liberações de Network
      ansible.builtin.replace:
        path: /etc/postgresql/16/main/pg_hba.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: 'host    all             all             127.0.0.1/32            scram-sha-256', replace: 'host    all             all             0.0.0.0/0               md5' } 
        - { regexp: 'host    all             all             ::1/128                 scram-sha-256', replace: 'host    all             all             ::1/128                 md5' }
      
    - name: Restart PostgreSQL service
      ansible.builtin.service:
        name: postgresql
        state: restarted
    
    - name: Set listen_addresses
      ansible.builtin.replace:
        path: /etc/postgresql/16/main/postgresql.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
          - { regexp: "^#listen_addresses.*", replace: "listen_addresses = '*'" } 
          - { regexp: "^max_connections.*", replace: "max_connections = 200" }
          - { regexp: "^#superuser_reserved_connections.*", replace: "superuser_reserved_connections = 10" }
      
    - name: Restart PostgreSQL service
      ansible.builtin.service:
        name: postgresql
        enabled: yes
        state: restarted

    - name: Install packages
      ansible.builtin.apt:
        name: expect
        state: latest
    
    - name: Copy the expect script to the target
      ansible.builtin.copy:
        src: create_zabbix_user.sh
        dest: /tmp/create_zabbix_user.sh
        mode: '0755'
    
    - name: Run the create_zabbix_user.sh script
      command: /tmp/create_zabbix_user.sh

    - name: Create the Zabbix database
      command: sudo -u postgres createdb -O zabbix -E Unicode -T template0 zabbix

    - name: Enable/Start DB
      ansible.builtin.service:
        name: postgresql 
        enabled: yes
        state: restarted

- name: Install Zabbix Server
  hosts: zabbix_server
  become: yes
  tags: zabbix_server
  vars_files: /etc/ansible/vars.yml
  tasks:

    - name: Install zabbix-server-pgsql/zabbix-sql-scripts/zabbix-agent
      apt:
        name:  
          - zabbix-server-pgsql
          - zabbix-sql-scripts
        state: present
        update_cache: yes
    
    
    - name: Import Zabbix database schema
      shell: |
        zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | psql -h 192.168.15.10 -U zabbix -d zabbix
      environment:
        PGPASSWORD: "password"
      args:
        executable: /bin/bash

    - name: Zabbix Server | Change
      ansible.builtin.replace:
        path: /etc/zabbix/zabbix_server.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: '# DBPassword=', replace: 'DBPassword=password' }
        - { regexp: '# DBHost=localhost', replace: 'DBHost=192.168.15.10' }
      
    - name: Enable/Start DB
      ansible.builtin.service:
        name: zabbix-server 
        enabled: yes
        state: started

- name: Install Nginx
  hosts: nginx
  become: yes
  vars_files: /etc/ansible/vars.yml
  tags: nginx
  tasks:

    - name: Install packages zabbix front
      apt:
        name:
          - zabbix-frontend-php 
          - php8.2-pgsql 
          - zabbix-nginx-conf
        state: present
        update_cache: yes
 
    
    - name: Web | Change Web
      ansible.builtin.replace:
        path: /etc/zabbix/nginx.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: '#        listen          8080;', replace: '        listen          80;' }
        - { regexp: '#        server_name     example.com;', replace: '        server_name     192.168.15.12;' }
 
    - name: Web | Change Web 2
      ansible.builtin.replace:
        path: /etc/php/8.2/fpm/php.ini
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: ';date.timezone =', replace: 'date.timezone = America/Sao_Paulo' } 


    - name: Enable/Start Web
      ansible.builtin.service:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - nginx
        - php8.2-fpm

    - name: Restart Web
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
      loop:
        - nginx
        - php8.2-fpm

- name: Restart Zabbix Agent
  hosts: all
  become: yes
  vars_files: /etc/ansible/vars.yml
  tasks:

    - name: Restart Agent All Servers
      ansible.builtin.service:
        name: zabbix-agent
        state: restarted

- name: Implement Database 
  hosts: db
  become: yes
  tags: db2
  vars_files: /etc/ansible/vars.yml
  tasks:

    - name: Restart Postgresql
      ansible.builtin.service:
        name: postgresql
        state: restarted


...


